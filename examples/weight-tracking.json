[
  {
    "id": "weight-tracking-flow",
    "type": "tab",
    "label": "Wger Weight Tracking",
    "disabled": false,
    "info": "This flow demonstrates how to track weight measurements and get statistics using the Wger API."
  },
  {
    "id": "wger-config-weight",
    "type": "wger-config",
    "name": "Wger API",
    "apiUrl": "https://wger.de",
    "authType": "token"
  },
  {
    "id": "add-weight-entry",
    "type": "inject",
    "z": "weight-tracking-flow",
    "name": "Log Weight: 75.5kg",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "{\"weight\":75.5,\"date\":\"2024-01-15\"}",
    "payloadType": "json",
    "x": 160,
    "y": 100,
    "wires": [["weight-entry-node"]]
  },
  {
    "id": "weight-entry-node",
    "type": "wger-weight",
    "z": "weight-tracking-flow",
    "name": "Create Weight Entry",
    "server": "wger-config-weight",
    "operation": "createEntry",
    "x": 380,
    "y": 100,
    "wires": [["debug-entry", "get-latest-weight"]]
  },
  {
    "id": "debug-entry",
    "type": "debug",
    "z": "weight-tracking-flow",
    "name": "Weight Entry Created",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 610,
    "y": 60,
    "wires": []
  },
  {
    "id": "get-latest-weight",
    "type": "function",
    "z": "weight-tracking-flow",
    "name": "Trigger Latest Weight",
    "func": "// Trigger getting the latest weight after adding entry\nmsg.payload = {};\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 610,
    "y": 100,
    "wires": [["latest-weight-node"]]
  },
  {
    "id": "latest-weight-node",
    "type": "wger-weight",
    "z": "weight-tracking-flow",
    "name": "Get Latest Weight",
    "server": "wger-config-weight",
    "operation": "listEntries",
    "x": 820,
    "y": 100,
    "wires": [["format-latest-weight"]]
  },
  {
    "id": "format-latest-weight",
    "type": "function",
    "z": "weight-tracking-flow",
    "name": "Format Latest",
    "func": "// Extract the latest weight entry\nif (msg.payload && msg.payload.results && msg.payload.results.length > 0) {\n    const latest = msg.payload.results[0];\n    msg.payload = {\n        latestWeight: latest.weight,\n        date: latest.date,\n        message: `Latest weight: ${latest.weight}kg on ${latest.date}`\n    };\n} else {\n    msg.payload = {\n        message: 'No weight entries found'\n    };\n}\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 980,
    "y": 100,
    "wires": [["debug-latest"]]
  },
  {
    "id": "debug-latest",
    "type": "debug",
    "z": "weight-tracking-flow",
    "name": "Latest Weight",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 1140,
    "y": 100,
    "wires": []
  },
  {
    "id": "get-weight-stats",
    "type": "inject",
    "z": "weight-tracking-flow",
    "name": "Get Weight Statistics",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "{\"dateFrom\":\"2024-01-01\",\"dateTo\":\"2024-12-31\"}",
    "payloadType": "json",
    "x": 170,
    "y": 200,
    "wires": [["weight-stats-node"]]
  },
  {
    "id": "weight-stats-node",
    "type": "wger-weight",
    "z": "weight-tracking-flow",
    "name": "Get Statistics",
    "server": "wger-config-weight",
    "operation": "getStatistics",
    "x": 380,
    "y": 200,
    "wires": [["process-stats"]]
  },
  {
    "id": "process-stats",
    "type": "function",
    "z": "weight-tracking-flow",
    "name": "Process Statistics",
    "func": "// Process weight statistics for display\nif (msg.payload && msg.payload.weight_data) {\n    const data = msg.payload.weight_data;\n    const stats = {\n        totalEntries: data.length,\n        dateRange: {\n            from: data.length > 0 ? data[0].date : null,\n            to: data.length > 0 ? data[data.length - 1].date : null\n        }\n    };\n    \n    if (data.length > 0) {\n        const weights = data.map(entry => parseFloat(entry.weight));\n        stats.weightStats = {\n            min: Math.min(...weights),\n            max: Math.max(...weights),\n            average: (weights.reduce((a, b) => a + b, 0) / weights.length).toFixed(1),\n            latest: weights[weights.length - 1],\n            change: weights.length > 1 ? (weights[weights.length - 1] - weights[0]).toFixed(1) : 0\n        };\n    }\n    \n    msg.payload = stats;\n} else {\n    msg.payload = { message: 'No weight statistics available' };\n}\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 550,
    "y": 200,
    "wires": [["debug-stats"]]
  },
  {
    "id": "debug-stats",
    "type": "debug",
    "z": "weight-tracking-flow",
    "name": "Weight Statistics",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 740,
    "y": 200,
    "wires": []
  },
  {
    "id": "bulk-weight-entries",
    "type": "inject",
    "z": "weight-tracking-flow",
    "name": "Add Multiple Entries",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "[{\"weight\":74.8,\"date\":\"2024-01-10\"},{\"weight\":75.2,\"date\":\"2024-01-12\"},{\"weight\":74.9,\"date\":\"2024-01-14\"},{\"weight\":75.5,\"date\":\"2024-01-16\"}]",
    "payloadType": "json",
    "x": 170,
    "y": 300,
    "wires": [["split-entries"]]
  },
  {
    "id": "split-entries",
    "type": "split",
    "z": "weight-tracking-flow",
    "name": "Split Entries",
    "splt": "\\n",
    "spltType": "str",
    "arraySplt": 1,
    "arraySpltType": "len",
    "stream": false,
    "addname": "",
    "x": 340,
    "y": 300,
    "wires": [["delay-between-entries"]]
  },
  {
    "id": "delay-between-entries",
    "type": "delay",
    "z": "weight-tracking-flow",
    "name": "Delay 1s",
    "pauseType": "delay",
    "timeout": "1",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "x": 470,
    "y": 300,
    "wires": [["bulk-weight-node"]]
  },
  {
    "id": "bulk-weight-node",
    "type": "wger-weight",
    "z": "weight-tracking-flow",
    "name": "Add Weight Entry",
    "server": "wger-config-weight",
    "operation": "createEntry",
    "x": 620,
    "y": 300,
    "wires": [["debug-bulk"]]
  },
  {
    "id": "debug-bulk",
    "type": "debug",
    "z": "weight-tracking-flow",
    "name": "Bulk Entry Added",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 800,
    "y": 300,
    "wires": []
  },
  {
    "id": "weight-progress-chart",
    "type": "inject",
    "z": "weight-tracking-flow",
    "name": "Get Chart Data",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "{\"groupBy\":\"week\",\"dateFrom\":\"2024-01-01\",\"dateTo\":\"2024-03-31\"}",
    "payloadType": "json",
    "x": 150,
    "y": 400,
    "wires": [["chart-data-node"]]
  },
  {
    "id": "chart-data-node",
    "type": "wger-weight",
    "z": "weight-tracking-flow",
    "name": "Get Chart Data",
    "server": "wger-config-weight",
    "operation": "getStatistics",
    "x": 330,
    "y": 400,
    "wires": [["format-chart-data"]]
  },
  {
    "id": "format-chart-data",
    "type": "function",
    "z": "weight-tracking-flow",
    "name": "Format for Chart",
    "func": "// Format data suitable for charts/dashboards\nif (msg.payload && msg.payload.weight_data) {\n    const chartData = msg.payload.weight_data.map(entry => ({\n        x: entry.date,\n        y: parseFloat(entry.weight),\n        label: `${entry.weight}kg on ${entry.date}`\n    }));\n    \n    msg.payload = {\n        series: [{\n            name: 'Weight Progress',\n            data: chartData\n        }],\n        chartType: 'line',\n        xAxis: {\n            type: 'time',\n            title: 'Date'\n        },\n        yAxis: {\n            title: 'Weight (kg)'\n        }\n    };\n} else {\n    msg.payload = { error: 'No chart data available' };\n}\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 520,
    "y": 400,
    "wires": [["debug-chart"]]
  },
  {
    "id": "debug-chart",
    "type": "debug",
    "z": "weight-tracking-flow",
    "name": "Chart Data",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 690,
    "y": 400,
    "wires": []
  }
]